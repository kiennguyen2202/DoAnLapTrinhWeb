// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieTicketBookingManagementWeb.Models;

#nullable disable

namespace MovieTicketBookingManagementWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Cinema", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID")
                        .HasName("PK__Cinemas__59C926260B1BBE46");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Movie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PosterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID")
                        .HasName("PK__Movies__4BD2943AA05B8B91");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PaymentTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ID")
                        .HasName("PK__Payments__9B556A588F0B63FC");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieID")
                        .HasColumnType("int")
                        .HasColumnName("MovieID");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserID")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ID")
                        .HasName("PK__Reviews__74BC79AEE3371759");

                    b.HasIndex("MovieID");

                    b.HasIndex("UserID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CinemaID")
                        .HasColumnType("int")
                        .HasColumnName("CinemaID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SeatCapacity")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK__Rooms__3286391982D9C9F8");

                    b.HasIndex("CinemaID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Seat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("RoomID")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SeatType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID")
                        .HasName("PK__Seats__311713D3FAA4D100");

                    b.HasIndex("RoomID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Showtime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("MovieID")
                        .HasColumnType("int")
                        .HasColumnName("MovieID");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("ID")
                        .HasName("PK__Showtime__32D31FC00CFB611F");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Showtimes");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Ticket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("BookingTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal?>("DrinkPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("DrinkQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("PaymentID")
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    b.Property<decimal?>("PopcornPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("PopcornQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("SeatID")
                        .HasColumnType("int")
                        .HasColumnName("SeatID");

                    b.Property<int>("ShowtimeID")
                        .HasColumnType("int")
                        .HasColumnName("ShowtimeID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TicketType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserID")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ID")
                        .HasName("PK__Tickets__712CC627F99AA1C7");

                    b.HasIndex("PaymentID");

                    b.HasIndex("SeatID");

                    b.HasIndex("ShowtimeID");

                    b.HasIndex("UserID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID")
                        .HasName("PK__Users__1788CCACDA95FF49");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105349C68A34A")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Payment", b =>
                {
                    b.HasOne("MovieTicketBookingManagementWeb.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__UserID__5812160E");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Review", b =>
                {
                    b.HasOne("MovieTicketBookingManagementWeb.Models.Movie", "Movie")
                        .WithMany("Reviews")
                        .HasForeignKey("MovieID")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__MovieID__5DCAEF64");

                    b.HasOne("MovieTicketBookingManagementWeb.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserID")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__UserID__5CD6CB2B");

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Room", b =>
                {
                    b.HasOne("MovieTicketBookingManagementWeb.Models.Cinema", "Cinema")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemaID")
                        .IsRequired()
                        .HasConstraintName("FK__Rooms__CinemaID__3F466844");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Seat", b =>
                {
                    b.HasOne("MovieTicketBookingManagementWeb.Models.Room", "Room")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .IsRequired()
                        .HasConstraintName("FK__Seats__RoomID__45F365D3");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Showtime", b =>
                {
                    b.HasOne("MovieTicketBookingManagementWeb.Models.Movie", "Movie")
                        .WithMany("Showtimes")
                        .HasForeignKey("MovieID")
                        .IsRequired()
                        .HasConstraintName("FK__Showtimes__Movie__4222D4EF");

                    b.HasOne("MovieTicketBookingManagementWeb.Models.Room", "Room")
                        .WithMany("Showtimes")
                        .HasForeignKey("RoomID")
                        .IsRequired()
                        .HasConstraintName("FK__Showtimes__RoomI__4316F928");

                    b.Navigation("Movie");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Ticket", b =>
                {
                    b.HasOne("MovieTicketBookingManagementWeb.Models.Payment", "Payment")
                        .WithMany("Tickets")
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Tickets_Payments");

                    b.HasOne("MovieTicketBookingManagementWeb.Models.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatID")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__SeatID__52593CB8");

                    b.HasOne("MovieTicketBookingManagementWeb.Models.Showtime", "Showtime")
                        .WithMany("Tickets")
                        .HasForeignKey("ShowtimeID")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__Showtim__5165187F");

                    b.HasOne("MovieTicketBookingManagementWeb.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserID")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__UserID__5070F446");

                    b.Navigation("Payment");

                    b.Navigation("Seat");

                    b.Navigation("Showtime");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Cinema", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Movie", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Payment", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Room", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.Showtime", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MovieTicketBookingManagementWeb.Models.User", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Reviews");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
